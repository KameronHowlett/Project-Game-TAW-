<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_planets</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-150</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>planetSelect = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_left = keyboard_check_pressed(ord("A")) || (gamepad_button_check_pressed(0,gp_face1));
key_right = keyboard_check_pressed(ord("D")) || (gamepad_button_check_pressed(0,gp_face1));
key_press = keyboard_check_pressed(vk_space);
if(key_left)
{
    if(planetSelect != 1)
    planetSelect -= 1;
}

if(key_right)
{
    if(planetSelect != 3)
    planetSelect += 1;
}

if(key_press)
{
    room_goto(rm_level1);
}

if(planetSelect == 1)
{
    with(obj_levelArrow)
    {
    x = 150;
    }
}

if(planetSelect == 2)
{
    with(obj_levelArrow)
    {
    x = 300;
    }
}

if(planetSelect == 3)
{
    with(obj_levelArrow)
    {
    x = 450;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(planetSelect == 1)
{
    draw_sprite(spr_levelPlanetNames,0,500, 650)
    draw_sprite(spr_levelWisdom,0,300,750)
    draw_sprite(spr_levelWisdom,1,380,750)
    draw_sprite(spr_levelWisdom,2,460,750)
    draw_sprite(spr_levelWisdom,3,540,750)
    draw_sprite(spr_levelWisdom,4,620,750)
    draw_sprite(spr_levelWisdom,5,700,750)
}
if(planetSelect == 2)
{
    draw_sprite(spr_levelPlanetNames,1,500, 650)
    draw_sprite(spr_levelMolar,0,300,750)
    draw_sprite(spr_levelMolar,1,380,750)
    draw_sprite(spr_levelMolar,2,460,750)
    draw_sprite(spr_levelMolar,3,540,750)
    draw_sprite(spr_levelMolar,4,620,750)
    draw_sprite(spr_levelMolar,5,700,750)
}
if(planetSelect == 3)
{
    draw_sprite(spr_levelPlanetNames,2,500, 650)
    draw_sprite(spr_levelCanine,0,300,750)
    draw_sprite(spr_levelCanine,1,380,750)
    draw_sprite(spr_levelCanine,2,460,750)
    draw_sprite(spr_levelCanine,3,540,750)
    draw_sprite(spr_levelCanine,4,620,750)
    draw_sprite(spr_levelCanine,5,700,750)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_planets,0,150,room_height/2);
draw_sprite(spr_planets,1,300,room_height/2);
draw_sprite(spr_planets,2,450,room_height/2);
draw_sprite(spr_planets,3,700,room_height/2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
