<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_planets</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-150</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>planetSelect = 1;
isPS = true;
levelSelect = 0;
isLS = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_left = keyboard_check_pressed(ord("A")) || (gamepad_button_check_pressed(0,gp_padl));
key_right = keyboard_check_pressed(ord("D")) || (gamepad_button_check_pressed(0,gp_padr));
key_press = keyboard_check_pressed(vk_space) || (gamepad_button_check_pressed(0,gp_face1));
key_back = keyboard_check_pressed(vk_backspace) || (gamepad_button_check_pressed(0,gp_face4));

if(isPS)
{
obj_levelArrow.image_alpha = 1;
}
if(isLS)
{
obj_levelArrow.image_alpha = 0;
}

if(key_left &amp;&amp; isPS)
{
    if(planetSelect != 1)
    planetSelect -= 1;
}

if(key_right &amp;&amp; isPS)
{
    if(planetSelect != 3)
    planetSelect += 1;
}

if(key_left &amp;&amp; isLS)
{
    if(levelSelect != 0)
    levelSelect -= 1;
}

if(key_right &amp;&amp; isLS)
{
    if(levelSelect != 5)
    levelSelect += 1;
}
//Pressing space
if(key_press)
{
    if(isLS &amp;&amp; planetSelect == 1 &amp;&amp; levelSelect == 0)
    {
       room_goto(rm_level1);
    }
    
    if(isLS &amp;&amp; planetSelect == 1 &amp;&amp; levelSelect == 1)
    {
       room_goto(rm_level2);
    }
    if(isLS &amp;&amp; planetSelect == 1 &amp;&amp; levelSelect == 2)
    {
       room_goto(rm_level3);
    }
    
     if(isLS &amp;&amp; planetSelect == 1 &amp;&amp; levelSelect == 3)
    {
       room_goto(rm_level4);
    }
    
    if(isPS)
    {
        isLS = true;
        isPS = false;
    }
}
//Pressing Back
if(key_back)
{
    if(isPS)
    {
        room_goto(rm_logo);
    }
    if(isLS)
    {
       isLS = false;
       isPS = true;
       levelSelect = 0;
    }
}

if(planetSelect == 1)
{
    with(obj_levelArrow)
    {
    x = 148;
    }
}

if(planetSelect == 2)
{
    with(obj_levelArrow)
    {
    x = 300;
    }
}

if(planetSelect == 3)
{
    with(obj_levelArrow)
    {
    x = 450;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(isLS)
{
    draw_sprite(spr_highlight,0, 300 +(levelSelect * 80), 750);
    if(planetSelect == 1)
    {
        draw_sprite(spr_levelImageWisdom,levelSelect,500,350);
        draw_sprite(spr_levelNames,levelSelect,500,120);
    }
}
if(planetSelect == 1)
{
    draw_sprite(spr_levelPlanetNames,0,500, 650)
    draw_sprite(spr_levelWisdom,0,300,750)
    draw_sprite(spr_levelWisdom,1,380,750)
    draw_sprite(spr_levelWisdom,2,460,750)
    draw_sprite(spr_levelWisdom,3,540,750)
    draw_sprite(spr_levelWisdom,4,620,750)
    draw_sprite(spr_levelWisdom,5,700,750)
}
if(planetSelect == 2)
{
    draw_sprite(spr_levelPlanetNames,1,500, 650)
    draw_sprite(spr_levelMolar,0,300,750)
    draw_sprite(spr_levelMolar,1,380,750)
    draw_sprite(spr_levelMolar,2,460,750)
    draw_sprite(spr_levelMolar,3,540,750)
    draw_sprite(spr_levelMolar,4,620,750)
    draw_sprite(spr_levelMolar,5,700,750)
}
if(planetSelect == 3)
{
    draw_sprite(spr_levelPlanetNames,2,500, 650)
    draw_sprite(spr_levelCanine,0,300,750)
    draw_sprite(spr_levelCanine,1,380,750)
    draw_sprite(spr_levelCanine,2,460,750)
    draw_sprite(spr_levelCanine,3,540,750)
    draw_sprite(spr_levelCanine,4,620,750)
    draw_sprite(spr_levelCanine,5,700,750)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_planets,0,150,room_height/2);
draw_sprite(spr_planets,1,300,room_height/2);
draw_sprite(spr_planets,2,450,room_height/2);
draw_sprite(spr_planets,3,720,room_height/2);

draw_sprite(spr_planets,3 + planetSelect,planetSelect * 150,room_height/2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
