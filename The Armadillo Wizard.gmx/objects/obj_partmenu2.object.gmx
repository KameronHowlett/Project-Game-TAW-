<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(partStar_sys);
part_system_destroy(partStar2_sys);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stars
partStar_sys = part_system_create();

partStar = part_type_create();
part_type_shape(partStar,spr_partPixel);
part_type_sprite(partStar,spr_partPixel,false,false,false);
part_type_size(partStar,1,2,-0.001,0);
part_type_colour1(partStar,c_white);
part_type_alpha2(partStar,.5,.1);
part_type_life(partStar,room_speed,room_speed *2)


partStar_emit = part_emitter_create(partStar_sys);
part_emitter_region(partStar_sys,partStar_emit,0,1000,0,800,ps_shape_rectangle,ps_distr_linear);
part_emitter_stream(partStar_sys,partStar_emit,partStar,-3);

//Advance System
repeat (room_speed * 3)
{
    part_system_update(partStar_sys);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stars II
partStar2_sys = part_system_create();

partStar2 = part_type_create();
part_type_shape(partStar2,spr_partPixel);
part_type_sprite(partStar2,spr_partPixel,false,false,false);
part_type_size(partStar2,0.25,0.5,-0.001,0);
part_type_colour1(partStar2,c_white);
part_type_alpha2(partStar2,.5,.1);
part_type_life(partStar2,room_speed,room_speed *2)


partStar2_emit = part_emitter_create(partStar2_sys);
part_emitter_region(partStar2_sys,partStar2_emit,0,1000,0,800,ps_shape_rectangle,ps_distr_linear);
part_emitter_stream(partStar2_sys,partStar2_emit,partStar2,-1);

//Advance System
repeat (room_speed * 3)
{
    part_system_update(partStar2_sys);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
